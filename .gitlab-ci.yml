include:
  - project: 'WWU-IT/ci-templates'
    file: '.gitlab-ci-helm.yml'
    ref: 'v12'

test charts:
  image:
    name: harbor.uni-muenster.de/proxy-docker/library/alpine:3.16.2
  stage: test
  variables:
    helm_version: 3.10.0
  tags:
    - autoscaling
    - mike
  before_script:
    - apk add curl
    - curl -L "https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz" | tar zxf - -C /usr/local/bin kubeval
    - curl -L "https://get.helm.sh/helm-v${helm_version}-linux-amd64.tar.gz" | tar zxf - -C /usr/local/bin --strip-components=1 linux-amd64/helm
  script:
    - chmod +x ./ci-scripts/chart-test.sh > /dev/null
    - chmod go-r /builds/sciebo-rds/charts.tmp/KUBECONFIG > /dev/null
    - ./ci-scripts/chart-test.sh

deploy charts to harbor:
  image:
    name: harbor.uni-muenster.de/proxy-docker/library/alpine:3.16.2
  stage: deploy
  tags:
    - autoscaling
    - mike
  before_script:
    - apk add curl jq python3 py3-pip
    - curl -L "https://get.helm.sh/helm-v${helm_version}-linux-amd64.tar.gz" | tar zxf - -C /usr/local/bin --strip-components=1 linux-amd64/helm
    - pip install yq
  script:
    - chmod +x ./ci-scripts/chart-deploy.sh > /dev/null
    - ./ci-scripts/chart-deploy.sh
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "release"'
    - if: '$CI_COMMIT_TAG'


charts:
  stage: deploy
  image: harbor.uni-muenster.de/rds/skaffold:testing
  variables:
    HELM_BRANCH: develop
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "release"'
    - if: '$CI_COMMIT_TAG'
      variables:
        HELM_BRANCH: stable
  script:
    - mkdir -p ./pkgs
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm repo add --username gitlab-ci-token --password ${CI_JOB_TOKEN} ${CI_PROJECT_NAME} ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/${HELM_BRANCH}
    - for i in charts/*/;do helm cm-push --force "$i" ${CI_PROJECT_NAME} ;done

charts_pages:
  stage: build
  image: harbor.uni-muenster.de/rds/skaffold:testing
  variables:
    HELM_BRANCH: develop
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "release"'
      variables:
        HELM_BRANCH: stable
    - if: '$CI_COMMIT_TAG'
      variables:
        HELM_BRANCH: stable
  script:
    - apt update
    - apt install -y python3 python3-pip
    - pip3 install awscli
    - mkdir -p ./docs/static/charts
    - aws --endpoint-url https://radosgw.public.os.wwu.de s3 cp s3://sciebords-charts/${HELM_BRANCH} ./docs/static/charts --recursive
    - find charts -name Chart.yaml -print | sed s/Chart.yaml//g | awk -F"/" '{print NF $0}' | sort -nr | sed 's/^.//' | xargs -n1 helm dep build
    - for i in charts/*/;do helm package --dependency-update --destination ./docs/static/charts "$i" ;done
    - helm repo index --url https://www.research-data-services.org/charts/${HELM_BRANCH} --merge ./docs/static/charts/index.yaml ./docs/static/charts/
    - aws --endpoint-url https://radosgw.public.os.wwu.de s3 cp ./docs/static/charts s3://sciebords-charts/${HELM_BRANCH} --recursive

# TODO: We should get rid of skaffold
deploy:
  stage: deploy
  image: harbor.uni-muenster.de/rds/skaffold:testing
  rules:
  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  - if: '$CI_COMMIT_BRANCH == "release"'
  - if: '$CI_COMMIT_TAG'
  script:
    - mkdir -p ~/.config/sops/age
    - cat "$AGE_KEYS" | base64 -d - > ~/.config/sops/age/keys.txt
    - mkdir -p ~/.kube
    - cat "$KUBE_CONFIG" | base64 -d - > ~/.kube/config
    - export KUBECONFIG=~/.kube/config
    # reduce noise in ci
    - chmod go-r ~/.kube/config
    # pull helm deps: https://github.com/helm/helm/issues/2247#issuecomment-998636912
    # workaround issue #206
    - helm delete sciebords || true
    # workaround due to old deploy cluster
    - sed -i -e 's#networking.k8s.io/v1#extensions/v1beta1#g' ./charts/*/templates/ingress.yaml
    - sed -i -e '22d' ./charts/*/templates/ingress.yaml
    - sed -i -e '24,28d' ./charts/*/templates/ingress.yaml
    - > 
      sed -i -e '$ a\              serviceName: {{ $fullName }}' ./charts/*/templates/ingress.yaml
    - >
      sed -i -e '$ a\              servicePort: http' ./charts/*/templates/ingress.yaml
    # shotgun debugging ftw
    - cat ./charts/*/templates/ingress.yaml
    # lol that was fun
    # turns out colons in commands are interpreted by gitlab ci
    - find ./charts -name Chart.yaml -print | sed s/Chart.yaml//g | awk -F"/" '{print NF $0}' | sort -nr | sed 's/^.//' | xargs -n1 helm dep build
    - helm secrets upgrade -i sciebords charts/all --values $HELM_DEPLOY_VALUES --set-string global.image.tag=$CI_PIPELINE_ID
    # now try to write everything out in our super secret repo
    - git config --global user.name "CI Update User"
    - git config --global user.email "sciebo.rds@wwu.de"
    - git clone "https://${SCIEBO_RDS_TEST_DEPLOY_NAME}:${SCIEBO_RDS_TEST_DEPLOY_TOKEN}@zivgitlab.uni-muenster.de/wwuit-sys/sciebo/applications/rds-test.git" --branch "develop"
    - cd rds-test
    - mkdir -p deploy
    - helm secrets template sciebords ../charts/all --values $HELM_DEPLOY_VALUES --set-string global.image.tag=$CI_PIPELINE_ID | sed -e 's/sciebo-rds-dev/rds-test/g' > deploy/rds-test.yml
    - git add deploy
    - git commit -m "Automatic update"
    - git push "https://${SCIEBO_RDS_TEST_DEPLOY_NAME}:${SCIEBO_RDS_TEST_DEPLOY_TOKEN}@zivgitlab.uni-muenster.de/wwuit-sys/sciebo/applications/rds-test.git" "develop:develop"

